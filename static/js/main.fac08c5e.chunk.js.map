{"version":3,"sources":["assets/logo.jpg","components/CustomNavbar.js","components/App.js","reportWebVitals.js","index.js"],"names":["CustomNavbar","Navbar","bg","variant","Container","Brand","href","alt","src","logo","width","height","className","App","useState","web3","setWeb3","account","setAccount","tokenSymbol","setTokenSymbol","tokenPrice","setTokenPrice","myTokenSale","setMyTokenSale","numberOfTokens","setNumberOfTokens","tokensSold","setTokensSold","tokensAvailable","tokensSoldPercentage","setTokensSoldPercentage","numberOfTokensToBuy","setNumberOfTokensToBuy","loading","setLoading","loadingSell","setLoadingSell","showMessage","setShowMessage","useEffect","loadBlockchainData","toast","success","a","window","ethereum","Web3","enable","eth","net","getId","netId","getAccounts","accounts","alert","myToken","Contract","MyToken","abi","networks","address","MyTokenSale","methods","balanceOf","call","tokens","symbol","utils","fromWei","toFixed","events","Sell","fromBlock","error","event","console","log","reloadContractsData","buyTokens","e","preventDefault","send","from","value","toWei","gas","theme","Spinner","animation","Card","onSubmit","id","step","type","placeholder","required","onChange","target","ProgressBar","now","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fac08c5e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.53f70d2b.jpg\";","import Navbar from 'react-bootstrap/Navbar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport logo from '../assets/logo.jpg';\r\n\r\nfunction CustomNavbar() {\r\n  return (\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n            <Navbar.Brand href=\"#home\">\r\n              <img\r\n                alt=\"\"\r\n                src={logo}\r\n                width=\"30\"\r\n                height=\"30\"\r\n                className=\"d-inline-block align-top\"\r\n              />{' '}\r\n            MyToken ICO\r\n            </Navbar.Brand>\r\n        </Container>\r\n      </Navbar>\r\n  );\r\n}\r\n\r\nexport default CustomNavbar;","import { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport CustomNavbar from './CustomNavbar';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Container from 'react-bootstrap/Container';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'; \r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Web3 from 'web3';\r\nimport MyToken from '../abis/MyToken.json';\r\nimport MyTokenSale from '../abis/MyTokenSale.json';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction App() {\r\n\r\nconst [web3, setWeb3] = useState('undefined');\r\nconst [account, setAccount] = useState('');\r\nconst [tokenSymbol, setTokenSymbol] = useState('');\r\nconst [tokenPrice, setTokenPrice] = useState(0);\r\nconst [myTokenSale, setMyTokenSale] = useState(null)\r\n\r\nconst [numberOfTokens, setNumberOfTokens] = useState(0);\r\nconst [tokensSold, setTokensSold] = useState(0);\r\nconst [tokensAvailable, setTokensAvailable] = useState(750000);\r\nconst [tokensSoldPercentage, setTokensSoldPercentage] = useState(70);\r\n\r\nconst [numberOfTokensToBuy, setNumberOfTokensToBuy] = useState('');\r\n\r\nconst [loading, setLoading] = useState(true);\r\nconst [loadingSell, setLoadingSell] = useState(false);\r\nconst [showMessage, setShowMessage] = useState(false);\r\n\r\nuseEffect(() => {\r\n  loadBlockchainData();\r\n},[])\r\n\r\nuseEffect(() => {\r\n  if(showMessage){\r\n    toast.success(\"You successfully bought MYT tokens!\")\r\n  }\r\n},[showMessage])\r\n\r\n\r\nconst loadBlockchainData = async () => {\r\n  if(typeof window.ethereum !== 'undefined'){\r\n      const web3 = new Web3(window.ethereum);\r\n      await window.ethereum.enable(); \r\n      const netId = await web3.eth.net.getId()\r\n      const accounts = await web3.eth.getAccounts()\r\n      if(typeof accounts[0] !== 'undefined'){\r\n        setAccount(accounts[0])\r\n        setWeb3(web3)\r\n      }else{\r\n        window.alert('Please login with MetaMask')\r\n      }\r\n\r\n      try{\r\n        const myToken = new web3.eth.Contract(MyToken.abi, MyToken.networks[netId].address)\r\n        const myTokenSale = new web3.eth.Contract(MyTokenSale.abi, MyTokenSale.networks[netId].address)\r\n        setMyTokenSale(myTokenSale)\r\n        //Get number of tokens for the current account\r\n        const tokens = await myToken.methods.balanceOf(accounts[0]).call()\r\n        setNumberOfTokens(tokens)\r\n        const tokenSymbol = await myToken.methods.symbol().call()\r\n        setTokenSymbol(tokenSymbol)\r\n        const tokenPrice = await myTokenSale.methods.tokenPrice().call()\r\n        setTokenPrice(web3.utils.fromWei(tokenPrice))\r\n        const tokensSold = await myTokenSale.methods.tokensSold().call()\r\n        setTokensSold(tokensSold)\r\n        const tokensSoldPercentage = (tokensSold / tokensAvailable).toFixed(2)*100;\r\n        setTokensSoldPercentage(tokensSoldPercentage)\r\n        setLoading(false);\r\n        //Listen for Sell event\r\n        myTokenSale.events.Sell({\r\n          fromBlock: 'latest',\r\n        }, (error, event) => {\r\n          console.log(event)\r\n          reloadContractsData(myToken, myTokenSale, accounts[0], web3)\r\n        })\r\n\r\n      } catch(e){\r\n        console.log('Error',e)\r\n        window.alert('Contracts not deployed to the current network')\r\n      }\r\n  }else{   \r\n    window.alert(\"Please install MetaMask\")\r\n  }\r\n}\r\n\r\nconst reloadContractsData = async (myToken, myTokenSale, account, web3) => {\r\n  //Get number of tokens for the current account\r\n  const tokens = await myToken.methods.balanceOf(account).call()\r\n  setNumberOfTokens(tokens)\r\n  const tokenSymbol = await myToken.methods.symbol().call()\r\n  setTokenSymbol(tokenSymbol)\r\n  const tokenPrice = await myTokenSale.methods.tokenPrice().call()\r\n  setTokenPrice(web3.utils.fromWei(tokenPrice))\r\n  const tokensSold = await myTokenSale.methods.tokensSold().call()\r\n  setTokensSold(tokensSold)\r\n  const tokensSoldPercentage = (tokensSold / tokensAvailable).toFixed(2)*100;\r\n  setTokensSoldPercentage(tokensSoldPercentage)\r\n  setNumberOfTokensToBuy('')\r\n  setShowMessage(true)\r\n  setLoadingSell(false)\r\n\r\n}\r\n\r\nconst buyTokens = async (e) => {\r\n  e.preventDefault();\r\n  setShowMessage(false)\r\n  try{\r\n    await myTokenSale.methods.buyTokens(numberOfTokensToBuy).send({from: account, value: numberOfTokensToBuy * web3.utils.toWei(tokenPrice), gas: 500000})\r\n    setLoadingSell(true)\r\n  }catch(e){\r\n    console.log('Error, buyTokens: ', e)\r\n  }\r\n}\r\n\r\n  return ( \r\n      <div className=\"App\">\r\n      <ToastContainer theme=\"colored\" />\r\n      <CustomNavbar>\r\n      </CustomNavbar>\r\n      {loading && \r\n      <Container>\r\n      <Spinner animation=\"grow\" variant=\"warning\" className=\"mt-5\"/>\r\n      </Container>\r\n      }\r\n      {!loading &&\r\n      <>\r\n      <Container>\r\n        <Card bg=\"warning\" className=\"mt-3\">\r\n          <h1>MyToken ICO sale</h1>\r\n        </Card>\r\n      </Container>\r\n      <Container>\r\n        <Card bg=\"warning\" className=\"mt-3\">\r\n          <b>Introducing \"MyToken\" (MYT)!</b>\r\n           <b>Token price is {tokenPrice} ETH. </b>\r\n           <b>You currently have {numberOfTokens} {tokenSymbol}.</b>\r\n          <br></br>\r\n          How many tokens do you want to buy?\r\n          <div className=\"form-div\">\r\n            <form onSubmit={(e) => buyTokens(e)}>\r\n              <div className=\"form-group mr-sm-2\">\r\n              <br></br>\r\n                <input\r\n                  id=\"numberOfTokens\"\r\n                  step=\"1\"\r\n                  type=\"number\"\r\n                  className=\"form-control form-control-md\"\r\n                  placeholder=\"Number of tokens...\"\r\n                  required\r\n                  value={numberOfTokensToBuy}\r\n                  onChange={event => setNumberOfTokensToBuy(event.target.value)}\r\n                />\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary mt-3 mb-3\">BUY TOKENS</button>\r\n            </form>\r\n            <ProgressBar className=\"mb-3\" now={tokensSoldPercentage} label={`${tokensSoldPercentage}%`}/>\r\n            <p>Current account connected:</p>\r\n            <p>{account}</p>\r\n            <p>{tokensSold}/{tokensAvailable} tokens sold</p>\r\n          </div>\r\n        </Card>\r\n        {loadingSell && \r\n          <Container>\r\n          <Spinner animation=\"grow\" variant=\"warning\" className=\"mt-5\"/>\r\n          </Container>\r\n          }\r\n      </Container>\r\n      </>\r\n    }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}